# Lifeline/Operator`s Side - *.is video files
# if you wish to play these ".asc1" files, you have to use VGMToolbox. Here are the instructions:
# 1. VGMToolbox -> Misc. -> GENH -> Create/Edit/Extract GENH
# 2. Make sure "Create" is checked.
# 3. Drag-and-drop the .asc1 file you want to "convert" into that big white field.
# 4. Input File Format should be set to "PlayStation 4-bit ADPCM".
# 5. Header Skip = 0
#    Channels = 2
#    Frequency = 48000
#    Interleave = 0x400
# 6. Make sure "No Loops" is set.
# 7. Click on "Create GENHs."
# 8. The generated .genh file should be on the same folder as the original file.
#    In fact, it always is.
# as for the ".vsf1" and ".vsf2" videos... I have no idea.

get IS_SIZE asize

idstring "sd3strv3"
get TFRAMES long
get VH long
get VW long
get FPS long
get FREQUENCY long
get CHANNELS long
putvarchr MEMORY_FILE IS_SIZE 0
log MEMORY_FILE 0 0
savepos OFFSET
do
	goto OFFSET
	getdstring SIGN1 4
	get CHUNK_SIZE1 long
	get CHUNK_SIZE2 long
	get ZERO long
	savepos CHUNK_OFFSET
	append
	log MEMORY_FILE CHUNK_OFFSET CHUNK_SIZE1
	append
	savepos OFFSET
	math OFFSET += CHUNK_SIZE1
while OFFSET < IS_SIZE
get IS_MSIZE asize MEMORY_FILE
putvarchr MEMORY_FILE2 IS_MSIZE 0
putvarchr MEMORY_FILE3 IS_MSIZE 0
putvarchr MEMORY_FILE4 IS_MSIZE 0
putvarchr MEMORY_FILE5 IS_MSIZE 0
log MEMORY_FILE2 0 0
log MEMORY_FILE3 0 0
log MEMORY_FILE4 0 0
log MEMORY_FILE5 0 0
set OFFSET 0
do
	goto OFFSET MEMORY_FILE
	getdstring SIGN2 4 MEMORY_FILE
	get CHUNK2_SIZE1 long MEMORY_FILE
	get CHUNK2_SIZE2 long MEMORY_FILE
	get ZERO long MEMORY_FILE
	savepos OFFSET MEMORY_FILE
	append
	if SIGN2 == "VSF1"
		log MEMORY_FILE3 OFFSET CHUNK2_SIZE1 MEMORY_FILE
	elif SIGN2 == "VSF2"
		log MEMORY_FILE4 OFFSET CHUNK2_SIZE1 MEMORY_FILE
	elif SIGN2 == "ASC1"
		log MEMORY_FILE5 OFFSET CHUNK2_SIZE1 MEMORY_FILE
	endif
	append
	math OFFSET += CHUNK2_SIZE1
while OFFSET < IS_MSIZE

get FINAL_SIZE asize MEMORY_FILE3
if FINAL_SIZE != 0
	log MEMORY_FILE 0 0
	append
	log MEMORY_FILE 0 FINAL_SIZE MEMORY_FILE3
	append
	log MEMORY_FILE3 0 0
	get NAME basename
	string NAME += ".vsf1"
	log NAME 0 FINAL_SIZE MEMORY_FILE
endif
get FINAL_SIZE asize MEMORY_FILE4
if FINAL_SIZE != 0
	log MEMORY_FILE 0 0
	log MEMORY_FILE2 0 0
	append
	log MEMORY_FILE 0 FINAL_SIZE MEMORY_FILE4
	append
	log MEMORY_FILE3 0 0
	get NAME basename
	string NAME += ".vsf2"
	log NAME 0 FINAL_SIZE MEMORY_FILE
endif
get FINAL_SIZE asize MEMORY_FILE5
if FINAL_SIZE != 0
	log MEMORY_FILE 0 0
	log MEMORY_FILE2 0 0
	log MEMORY_FILE3 0 0
	append
	log MEMORY_FILE 0 FINAL_SIZE MEMORY_FILE5
	append
	log MEMORY_FILE3 0 0
	get NAME basename
	string NAME += ".asc1"
	log NAME 0 FINAL_SIZE MEMORY_FILE
endif
