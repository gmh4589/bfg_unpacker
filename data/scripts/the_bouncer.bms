# The Bouncer
# v1 by AnonBaiter
# v2 by bnnm (.nam names)
# v3 by AnonBaiter (filling in the gaps)

get ARCHIVE_FNAME filename
get ARCHIVE_ONAME basename
get ARCHIVE_FCONT extension
get ARCHIVE_FSIZE asize

if ARCHIVE_FNAME == "BOUNCER.BIN"
    callfunction PARSE_BIN_1 1
elif ARCHIVE_FNAME == "BGMDATA.BIN" || ARCHIVE_FNAME == "BGMLIST.BIN" || ARCHIVE_FNAME == "BGMOFST.BIN"
	callfunction PARSE_BIN_2 1
elif ARCHIVE_FNAME == "BGMWDDAT.BIN" || ARCHIVE_FNAME == "BGMWDTBL.DAT"
	callfunction PARSE_BIN_2 1
elif ARCHIVE_FNAME == "SDWDDAT.BIN" || ARCHIVE_FNAME == "SDWDTBL.BIN"
	callfunction PARSE_BIN_3 1
else
    if ARCHIVE_FCONT == "sz"
		# (note from original author)
        # I might expand upon that
        open FDDE "sz" 0
        open FDDE "dat" 1
        
        get SZ_FSIZE asize 0
    
        getdstring DUMMY1 0x80 0
        savepos TMP2
        xmath SZ_SIZE "SZ_FSIZE - TMP2"
        log MEMORY_FILE TMP2 SZ_SIZE
        set OFFSET 0
        do
            get SIZE long MEMORY_FILE
            math OFFSET += SIZE
            savepos CURR_OFF
        while CURR_OFF < SZ_SIZE
    elif ARCHIVE_FCONT == "tbl" || ARCHIVE_FCONT == "nam" || ARCHIVE_FCONT == "dat"
        open FDDE "tbl" 0
        open FDDE "nam" 1
        open FDDE "dat" 2

        idstring 0 "OFST"
        get OFST_ZERO1 long 0
        get OFST_FILES1 long 0
        get OFST_ZERO2 long 0

        idstring 1 "NAME"
        get NAME_ZERO1 long 1
        get NAME_FILES1 long 1
        get NAME_ZERO2 long 1
        
        for f1 = 0 < OFST_FILES1
            get OFFSET long 0
            get SIZE long 0
            
            if OFFSET != 0xffffffff || SIZE != 0xffffffff
				# (note from bnnm)
				# sfx use .se and voices/bgm .vs, but with only 8 bytes
				# most names are cut off, could try to fix
				getdstring NAME 8 1
				
				math OFFSET * 0x800
                log NAME OFFSET SIZE 2
            endif
        next f1
    elif ARCHIVE_FCONT == "bin"
        getdstring SIGN4 4
        if SIGN4 == "IZ01"
			/*
			comtype lzss0 # ???
			get iz01_size asize
			
			get iz01_01 long
			get iz01_02 long
			get iz01_03 long
			get iz01_04 long
			get iz01_uncompressed_size long
			savepos iz01_offset
			
			string iz01_name p "[decompressed]%s" ARCHIVE_FNAME
			xmath iz01_compressed_size "iz01_size - iz01_offset"
			
			clog iz01_name iz01_offset iz01_compressed_size iz01_uncompressed_size
			*/
        else
            goto 0
            callfunction PARSE_BIN_1 1
        endif
    endif
endif

startfunction PARSE_BIN_1
    get ENTRIES1 long
    get NAME_OFF long
    savepos TMP1
    math NAME_OFF * 0x800
    goto NAME_OFF
    for e1 = 0 < ENTRIES1
        get NAME_OFF2 long
        math NAME_OFF2 + NAME_OFF
        savepos TMP2
        goto NAME_OFF2
        get NAME1 string
        goto TMP2
        
        putarray 0 e1 NAME1
    next e1
    goto TMP1
    for e1 = 0 < ENTRIES1
        getarray NAME1 0 e1
        get OFFSET long
        math OFFSET * 0x800
        
        savepos TMP3
        math OFF2 = TMP3
        goto OFF2
        get NEXT_OFFSET long
        math NEXT_OFFSET * 0x800
        goto TMP3
        
        if NEXT_OFFSET == 0
            xmath SIZE "ARCHIVE_FSIZE - OFFSET"
        else
            xmath SIZE "NEXT_OFFSET - OFFSET"
        endif
        
        if SIZE != 0
            log NAME1 OFFSET SIZE
        endif
    next e1
endfunction

startfunction PARSE_BIN_2
	open FDSE "BGMLIST.BIN" 0
	open FDSE "BGMOFST.BIN" 1
	open FDSE "BGMDATA.BIN" 2
	open FDSE "BGMWDTBL.BIN" 3
	open FDSE "BGMWDDAT.BIN" 4
	
	get bgmlist_size asize 0
	goto 0x10 0
	do
		get bgm_id long 0
		getdstring bgm_name 12 0
		savepos bgmlist_pos 0
		putarray 0 bgm_id bgm_name
		putarray 1 bgm_id bgm_name
	while bgmlist_pos < bgmlist_size
	
	idstring 1 "BGMOFST\0"
	idstring 3 "BGM\0\0\0\0\0"
	get bgmofst_files long 1
	get bgmwd_files long 3
	get bgmofst_base_number long 1
	get bgmwd_base_number long 3
	for i = 0 < bgmofst_files
		getarray bgm_name 0 i
		getarray wd_name 1 i
		get bgmofst_offset long 1
		get bgmwd_offset long 3
		get bgmofst_size long 1
		get bgmwd_size long 3
		
		if bgmofst_offset != 0xffffffff || bgmofst_size != 0xffffffff
			# just in case there is an empty entry hanging around
			math bgmofst_offset * bgmofst_base_number
			string bgm_name += ".bgm"
			log bgm_name bgmofst_offset bgmofst_size 2
			math bgmwd_offset * bgmwd_base_number
			string wd_name += ".wd"
			log wd_name bgmwd_offset bgmwd_size 4
		endif
	next i
endfunction

startfunction PARSE_BIN_3
	open FDSE "SDWDTBL.BIN" 0
	open FDSE "SDWDDAT.BIN" 1
	open FDSE "ALLSE.TBL" 2
	open FDSE "ALLSE.NAM" 3
	open FDSE "ALLSE.DAT" 4
	
	idstring 0 "SE\0\0\0\0\0\0"
	idstring 2 "OFST\0\0\0\0"
	idstring 3 "NAME\0\0\0\0"
	get sdwd_files long 0
	get sdwd_base_number long 0
	get ofst_files long 2
	get ofst_zero long 2
	get name_files long 3
	get name_zero long 3
	math a = 0
	math b = 0
	for i = 0 < sdwd_files
		get sdwd_offset long 0
		get ofst_offset long 2
		get sdwd_size long 0
		get ofst_size long 2
		
		if sdwd_offset != 0xffffffff || sdwd_size != 0xffffffff
			putarray 2 a sdwd_offset
			putarray 3 a sdwd_size
			math a + 1
		endif
		
		if ofst_offset != 0xffffffff || ofst_size != 0xffffffff
			getdstring name_name 8 3
			putarray 1 b name_name
			putarray 4 b ofst_offset
			putarray 5 b ofst_size
			math b + 1
		endif
	next i
	
	for j = 0 < b
		getarray name_name 1 j
		getarray sdwd_offset 2 j
		math sdwd_offset * sdwd_base_number
		getarray sdwd_size 3 j
		getarray ofst_offset 4 j
		math ofst_offset * sdwd_base_number
		getarray ofst_size 5 j
		set sdwd_name name_name
		string sdwd_name R ".se" ".wd"
		
		log sdwd_name sdwd_offset sdwd_size 1
		log name_name ofst_offset ofst_size 4
	next j
endfunction
