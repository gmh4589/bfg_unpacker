# extract audio from "Das Hexagon-Kartell" *.ANM videos
# (c) 2015-06-05 by AlphaTwentyThree of XeNTaX
# script for QuickBMS http://quickbms.aluigi.org

idstring "AN15"
get FSIZE asize
PutVarChr MEMORY_FILE FSIZE 0
log MEMORY_FILE 0 0
set FIRST 1
set OFFSET 0x48
for
   goto OFFSET
   getDstring IDENT 4
   get SIZE long
   savepos OFFSET
   #print "%OFFSET%"
   if IDENT == "SAMP"
      if SIZE > 0x10
         if FIRST == 1
            get DUMMY longlong
            get FREQ short
            get DUMMY byte
            get CH byte
            get BITS byte
            get DUMMY short
            set FIRST 0
         else
            getDstring DUMMY 0xf
         endif
         savepos OFFSET
         math SIZE -= 0xf
         append
         log MEMORY_FILE OFFSET SIZE
         append
      endif
   elif IDENT == "ENDE"
      break
   endif
   math OFFSET += SIZE
next
get SIZE asize MEMORY_FILE
set CODEC 1
set BLOCKALIGN 2

   endian little
   set PRE SIZE
   math PRE += 0x2c
   putVarChr MEMORY_FILE2 PRE 0
   log MEMORY_FILE2 0 0
   set MEMORY_FILE2 binary "\x52\x49\x46\x46\x20\xC0\xB1\x00\x57\x41\x56\x45\x66\x6D\x74\x20\x10\x00\x00\x00\x01\x00\x02\x00\x44\xAC\x00\x00\x10\xB1\x02\x00\x04\x00\x10\x00\x64\x61\x74\x61\xFC\xBF\xB1\x00"
   append
   log MEMORY_FILE2 0 SIZE MEMORY_FILE
   append
   set RIFFSIZE SIZE
   math RIFFSIZE += 36
   set AVGBYTES FREQ
   math AVGBYTES *= BLOCKALIGN
   
   putvarchr MEMORY_FILE2 0x04 RIFFSIZE long
   putvarchr MEMORY_FILE2 0x14 CODEC short          # wFormatTag: Microsoft PCM Format (0x0001)
   putvarchr MEMORY_FILE2 0x16 CH short   # wChannels
   putvarchr MEMORY_FILE2 0x18 FREQ short   # dwSamplesPerSec
   putvarchr MEMORY_FILE2 0x1c AVGBYTES long    # dwAvgBytesPerSec
   putvarchr MEMORY_FILE2 0x20 BLOCKALIGN short # wBlockAlign
   putvarchr MEMORY_FILE2 0x22 BITS short       # wBitsPerSample
   putvarchr MEMORY_FILE2 0x28 SIZE long
   get NAME basename
   string NAME += ".wav"
   get SIZE asize MEMORY_FILE2
   log NAME 0 SIZE MEMORY_FILE2