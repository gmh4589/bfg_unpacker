# Need For Eat SAD to wav

get EXT extension
if EXT == "sad"

    get CHANNELS short
    get FREQUENCY long
    get BITS short
    get SIZE long
    savepos OFFSET
    get NAME basename
    string NAME + ".wav"
    callfunction TOWAV 1

elif EXT == "cad"

    goto 0xc
    get FILES long
    for i = 0 < FILES
        getdstring DUMMY 0x1c
        get CHUNKS long
        get NAMESZ byte
        getdstring NAME NAMESZ
        getdstring DUMMY 0x17
        getdstring RIFF_HEAD 0x24

        # useless
        for x = 0 < CHUNKS
            get OFFSET long
            get SIZE long
            get DUMMY long
            get ZERO long
            math SIZE + 1
        next x

        math OFFSET = 0xc
        open FDSE NAME 1
        get SIZE asize 1
        math SIZE - OFFSET
        log MEMORY_FILE 0 0
        putdstring RIFF_HEAD 0x24 MEMORY_FILE
        putdstring "data" 4 MEMORY_FILE
        put SIZE long MEMORY_FILE
        append
        log MEMORY_FILE OFFSET SIZE 1
        append
        getvarchr SIZE RIFF_HEAD 4 long
        math SIZE + 8
        putvarchr MEMORY_FILE SIZE 0
        set NAME basename NAME
        string NAME + ".wav"
        log NAME 0 SIZE MEMORY_FILE
    next i

else
    print "Error: you must open the CAB ot SAD files"
    cleanexit
endif


startfunction TOWAV
    set MEMORY_FILE binary "\x52\x49\x46\x46\x00\x00\x00\x00\x57\x41\x56\x45\x66\x6d\x74\x20\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x64\x61\x74\x61\x00\x00\x00\x00"

    set RIFFSIZE long SIZE
    math RIFFSIZE += 36
    set BLOCKALIGN long BITS
    set AVGBYTES long FREQUENCY
    math BLOCKALIGN /= 8
    math BLOCKALIGN *= CHANNELS
    math AVGBYTES *= BLOCKALIGN

    putvarchr MEMORY_FILE 4 RIFFSIZE long
    putvarchr MEMORY_FILE 20 1 short          # wFormatTag: Microsoft PCM Format (0x0001)
    putvarchr MEMORY_FILE 22 CHANNELS short   # wChannels
    putvarchr MEMORY_FILE 24 FREQUENCY long   # dwSamplesPerSec
    putvarchr MEMORY_FILE 28 AVGBYTES long    # dwAvgBytesPerSec
    putvarchr MEMORY_FILE 32 BLOCKALIGN short # wBlockAlign
    putvarchr MEMORY_FILE 34 BITS short       # wBitsPerSample
    putvarchr MEMORY_FILE 40 SIZE long

    log MEMORY_FILE2 0 44 MEMORY_FILE
    append
    log MEMORY_FILE2 OFFSET SIZE
    append
    get RIFF_SIZE asize MEMORY_FILE2
    log NAME 0 RIFF_SIZE MEMORY_FILE2
endfunction
