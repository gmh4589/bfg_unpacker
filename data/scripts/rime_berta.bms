# Rime Berta
# script for QuickBMS http://quickbms.aluigi.org

set MEMORY_FILE3 binary "\xad\xdd\x11\x1d\x2f\xc7\x48\xda\x17\xf6\x43\x89\x64\x3e\x30\x6e\xef\xcd\x8b\xa7\x6d\x5e\xf1\x72\xee\x71\x35\x76\xbb\xc2\x5a\xfc\x86\x8a\xa5\xfb\x14\xac\xaf\x1f\x74\xf3\x84\xd9\x33\xc6\x18\x34\x13\x8c\xd4\x65\xe1\x2a\x53\xdc\xd5\x81\xe2\x52\x07\x46\x9c\xe7\x99\x32\x87\x9e\x45\x01\x66\x56\x5b\x54\xb3\x10\xc1\xb4\x63\x03\x2b\xaa\x7c\x77\x50\x29\xe5\x06\x83\xa0\x38\x96\x3c\x78\x93\xb1\xb7\x04\xed\x92\x94\xd3\x73\x44\x08\x21\x05\x60\xeb\x61\xe9\x40\xc9\xc4\xf0\x9d\xd6\x5f\x3a\xc0\xbd\x49\xdf\x4a\xae\x24\x8e\xe8\xff\x23\x6f\xf2\xb0\x20\x7f\x5d\xba\xa3\x88\xc3\x57\xb6\x9b\xde\xf5\x4b\xa4\x80\x4e\x59\x1e\xd2\x82\x12\xdb\x47\x6a\x68\xce\xea\x98\xe3\x26\x0e\x19\xfd\x4d\xb8\xcb\x37\xe6\xb5\xec\x16\xa1\x5c\xa6\x39\x3b\xfe\x2e\xb9\xca\xbc\x75\x62\xbe\x79\x0f\xf8\x25\x8f\x70\xd8\x0d\x09\x2d\x8d\x15\x1c\x3d\x41\xf7\x7d\x58\xb2\x4f\x4c\x6b\xc8\x67\xf4\x7b\x22\x6c\xcc\xd0\xab\x00\x0a\x7a\xd1\x2c\xa2\x36\x1b\x95\xc5\xcf\xbf\x31\x28\x0c\x42\x69\xe0\x90\xd7\x51\xa9\xe4\x85\xf9\x0b\x7e\x97\x9f\x3f\x91\xfa\x9a\x02\x1a\x55\x27\xa8\x2d\x51\x90\x02\x8b\xfd\x71\xe6\x87\x58\xbb\x3f\x1d\xf8\xf3\x89\xa5\x66\xd5\xa3\x8a\xf5\xdf\x10\x63\xa6\x56\x4f\xfc\x1b\x7e\x83\x9b\xcc\xfe\x88\x3b\xc0\x6f\x3c\x38\x48\x5a\x42\x45\x77\xdc\xaf\x1e\x0d\xed\xf0\x49\x8c\x4a\x30\x11\xe5\x73\x72\x59\x3e\xb3\x33\xf4\xd6\x94\xdb\x70\xa2\xa8\x76\xf7\xba\x4b\x0a\xfa\x5c\x1a\x01\x86\xea\xd3\x09\x04\x81\x00\xb6\x8f\x68\x64\xc7\xbf\x9e\x9d\x37\x2b\x5b\xd8\x40\x3d\xd0\xf9\x43\x2e\x69\x93\xcd\x47\xde\x8d\xdd\x44\x41\x21\x9a\x60\x24\xb2\x29\xf6\xce\x3a\x23\x67\x2f\x0b\x34\x0e\xab\xeb\x03\x62\xc2\xd9\x20\x7b\x25\x16\x7f\x7a\xe4\xa4\x36\xc8\xd1\x0f\x46\xbc\x28\x92\xc3\x99\xe8\x50\x53\x85\x9f\xf2\xb1\xb9\xe0\xd2\x82\xf1\x5e\x2a\x06\xda\x32\x74\xcf\xd7\xe9\xc4\x6a\x4d\x52\x17\x1f\xaa\x22\x9c\xee\xa0\xb0\xb7\x7c\x80\x65\x91\xd4\xc6\x13\xa7\xff\xc1\x26\x0c\xbd\xe2\x27\xfb\x39\x7d\xca\x5f\x84\x95\xec\x18\x6b\xb4\x79\x6e\x6c\xe7\x31\xc5\x2c\x55\x75\x07\xac\xae\x08\xad\x54\x98\x8e\x78\x6d\xa9\xcb\x15\xc9\xbe\x19\xef\x5d\x97\xe3\xa1\xe1\x57\x4c\x61\x4e\x05\x35\x14\xb5\x96\x1c\x12\xb8\x61\x17\x12\xf8\x34\x69\xf9\xf2\x80\x7d\xff\xcb\x1e\xf6\x2b\xc5\xfa\x40\xee\xd0\x19\x62\x48\xbf\x90\x6f\x10\xde\x0d\xaa\x8a\x33\x0c\xed\x37\x04\x4e\x4c\xf1\x9a\x87\xf5\x44\x58\x5a\x9e\x7c\x93\x67\x46\xfd\xa0\x4b\x28\x26\xdb\x5c\xf0\x21\xb7\xe9\x54\x7b\x01\x0a\xa3\x60\xd5\xc6\xb5\x23\x68\xea\x00\xb1\x86\xa9\x78\x65\x42\xad\x91\xeb\x7e\xce\xf7\xa2\xdf\x5f\x25\x84\x59\x20\xe8\x6e\xae\x0e\x97\xa1\x43\xd2\x13\x66\xe1\xca\x63\xc7\x7f\xb0\x2d\xa7\x14\x2f\x06\x1b\x9d\xfe\xe2\x11\x1d\x9b\xef\x79\x9c\x71\x6d\xd7\x3a\xb2\xaf\xd4\xb8\x6a\xdc\xcc\x77\x74\x8f\xa6\x3f\x98\x85\x83\x92\xc0\x81\x47\xcd\x5d\x29\xb6\x6b\xab\x52\x08\x4f\xb3\x7a\x32\xe5\x18\xd9\x0b\xf4\x2a\x3e\x24\x72\x76\x41\x6c\x53\x82\x56\x07\x4d\x1a\x5b\x3c\xe6\x02\xcf\x16\x73\x4a\xdd\xc4\x57\x55\xc3\x9f\x1c\x22\x45\x70\x95\x64\xd3\xbc\xe7\x35\xbb\x49\xac\xa4\x0f\x3b\x03\xd6\x05\xb4\x89\xe4\xba\x36\xc2\xd8\x51\x39\x8e\xa5\x30\x8b\xa8\xbe\x1f\xf3\x2e\x5e\x94\x50\x3d\x75\xfb\xe3\x09\x2c\xd1\xc1\xda\x8c\xc9\x31\x38\xc8\x99\xb9\x15\xfc\x88\x8d\xbd\x96\xe0\xec\x27\x95\xde\xed\xd5\x80\xfd\x7a\xd6\x3e\xc0\x79\x43\xf8\xcc\xe5\x8d\xac\x39\x48\xa8\xd0\xb2\x6f\xbc\x38\xcb\x6e\x1e\xe4\x7e\x0f\x71\x62\x7c\x21\xc4\xd3\x25\x09\x55\x73\x44\x1d\x77\x69\x07\x7f\x0e\xb0\x4b\xa6\x06\xc1\x6c\x87\xcf\x5d\xf5\x17\xdd\x36\x9e\x4e\x04\x13\x02\xcd\xf7\x90\xb6\xa4\x29\x5a\x2e\x46\x18\x01\xf6\xdf\x4c\xd1\x20\x50\x12\xc8\x3f\xee\x56\xdb\x08\x15\x9c\x31\x0c\x5b\xbf\x63\x16\x8b\x86\x98\x26\x93\xa5\x9b\xb8\x0b\xb3\x7b\x19\x61\x30\xc3\x3a\xd2\xfe\x37\x3d\xca\xa0\x2c\xb1\x97\x6a\x3b\x41\x40\xc9\xce\x2f\xab\x8f\x4d\x82\xe7\x70\x58\xfc\x54\x1a\xe1\x5c\xa9\xf4\x2b\x9d\xd9\x72\x5e\x85\xdc\xad\x2d\x45\xe6\x35\xc7\x76\x28\xc6\x9f\x9a\xd8\x10\x68\x84\xb5\xe9\xf3\xf9\xbb\xba\xfa\xef\x0d\x99\xaa\xc5\x3c\xa7\x8c\xe2\x67\x0a\x03\xd7\x6b\x88\x5f\xae\x91\xaf\xb7\x1c\x42\x32\x96\xf2\x81\x8e\x24\x11\xf0\xeb\x05\x27\x51\x53\x4a\xb4\x65\xf1\x22\x00\xea\xb9\xa1\xe3\x83\x92\xe8\x52\x64\x34\x57\xe0\x4f\xec\x23\x6d\x14\x94\x49\x78\x1f\xff\xa2\xda\xa3\x89\x47\x7d\xfb\xbe\x2a\x33\x60\xc2\x75\xd4\x1b\x59\x8a\x66\x74\xbd"

idstring "EPK2"
goto 0x10
get DATA_OFF long
get FOLDERS long
get FILES long
get ZERO long
math ZSIZE = DATA_OFF
savepos OFFSET
math ZSIZE - OFFSET

getdstring pKey 0x100 MEMORY_FILE3
callfunction DECRYPT 1

log MEMORY_FILE2 0 ZSIZE MEMORY_FILE

for i = 0 < FOLDERS
    callfunction GET_NAME 1
    get PREV_ENTRY long MEMORY_FILE2
    get DUMMY2 long MEMORY_FILE2
    get FILE_ENTRY long MEMORY_FILE2
    get DUMMY1 long MEMORY_FILE2
    get NEXT_ENTRY long MEMORY_FILE2
    putarray 0 i NAME
    putarray 1 i FILE_ENTRY
    putarray 4 i PREV_ENTRY
    putarray 5 i NEXT_ENTRY
next i

savepos FILES_OFF MEMORY_FILE2

for FOLDER = 0 < FOLDERS
    getarray PATH 0 FOLDER
    getarray FILE_ENTRY 1 FOLDER
    getarray PREV_ENTRY 4 FOLDER
    for PREV_ENTRY = PREV_ENTRY != 0
        math PREV_ENTRY - 1
        getarray NAME 0 PREV_ENTRY
        getarray PREV_ENTRY 4 PREV_ENTRY
        string PATH p "%s/%s" NAME PATH
    next

    for FILE_ENTRY = FILE_ENTRY != 0
        math FILE_ENTRY - 1
        xmath OFFSET "FILES_OFF + (FILE_ENTRY * 28)"
        goto OFFSET MEMORY_FILE2
        callfunction GET_NAME 1
        get DUMMY threebyte MEMORY_FILE2
        get KEY_BLOCK byte MEMORY_FILE2
        get OFFSET long MEMORY_FILE2
        get ZSIZE long MEMORY_FILE2
        get SIZE long MEMORY_FILE2
        get PREV_ENTRY long MEMORY_FILE2
        get NEXT_ENTRY long MEMORY_FILE2

        math TMP = KEY_BLOCK
        math TMP - 1
        math TMP * 0x100
        goto TMP MEMORY_FILE3
        getdstring pKey 0x100 MEMORY_FILE3
        callfunction DECRYPT 1

        string FNAME p "%s/%s" PATH NAME
        if ZSIZE == SIZE
            log FNAME 0 SIZE MEMORY_FILE
        else
            clog FNAME 0 ZSIZE SIZE MEMORY_FILE
        endif
        math FILE_ENTRY = NEXT_ENTRY
    next
next FOLDER

startfunction GET_NAME
    get NAME_OFF long MEMORY_FILE2
    savepos TMP MEMORY_FILE2
    goto NAME_OFF MEMORY_FILE2
    get NAME string MEMORY_FILE2
    goto TMP MEMORY_FILE2
endfunction

startfunction DECRYPT
    math TMP = 0x400
    if TMP > ZSIZE
        math TMP = ZSIZE
    endif
    encryption xor pKey "" 0 0x100
    log MEMORY_FILE OFFSET TMP
    encryption "" ""
    math OFFSET + TMP
    math ZSIZE - TMP
    if ZSIZE > 0
        append
        log MEMORY_FILE OFFSET ZSIZE
        append
    endif
    math ZSIZE + TMP
    goto 0 MEMORY_FILE
endfunction
