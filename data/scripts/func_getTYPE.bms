# determine file type via various heuristics
# (c) 2014-10-01 by AlphaTwentyThree of XeNTaX

startfunction getTYPE
	set TQUIT 0 # quit marker
	set EXT ""
	set TYPESTRING ""
	set ZNAME ""
	endian little
	goto 0 MEMORY_FILE
	get MSIZE asize MEMORY_FILE
	if MSIZE > 3
		for STR = 1 <= 4 # determine if string identifier (only first three bytes)
			get TEST byte MEMORY_FILE
			if TEST < 0x20
				break
			elif TEST > 0x7e
				break
			endif
		next STR
		math STR -= 1
		goto 0 MEMORY_FILE
		if STR == 4
			getDstring TYPE 4 MEMORY_FILE
			if TYPE == ""
			elif TYPE == "<?xm"
				set EXT ".xml"
			elif TYPE == "BFFB"
				set EXT ".bf"
			elif TYPE == "CIDS"
				set EXT ".cid"
			elif TYPE == "PAD "
				set EXT ".pad"
			elif TYPE == "<!--"
				set EXT == ".xml"
			elif TYPE == "OMG."
				set EXT ".omg"
			elif TYPE == "MIG."
				set EXT ".mig"
			elif TYPE == "1SNh"
				set EXT ".tgv" # Electronic Arts TGV movie
			elif TYPE == "TAE "
				set EXT ".tae"
			elif TYPE == "30GF"
				set EXT ".fpg" # FPG archive
			elif TYPE == "49SB"
				set EXT ".49sb" # Summer Stars 2012 archive
			elif TYPE == "4ACS"
				set EXT ".sca" # NDS-specific
			elif TYPE == "AIXF"
				set EXT ".aix" # Cri Engine aix audio file
			elif TYPE == "AKPK"
				set EXT ".pak" # AKPK pack
			elif TYPE == "BCA0"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".nsbca" # NDS 3d graphic
				endif
			elif TYPE == "BG"
				goto 0 MEMORY_FILE
				get TYPE long MEMORY_FILE
				if TYPE == 0x1002742
					goto 8 MEMORY_FILE
					get SSIZE long MEMORY_FILE
					math SSIZE += 0x14
					if SSIZE == MSIZE
						set EXT ".bmp" # bitmap picture
					endif
				endif
			elif TYPE == "BIKi"
				goto 4 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				math SSIZE += 8
				if SSIZE == MSIZE
					set EXT ".bik" # bink video
				endif
			elif TYPE == "BKHD"
				set EXT ".bnk" # Wwise sound bank
			elif TYPE == "BMD0"
				set EXT ".nsbmd" # NDS-specific
			elif TYPE == "BND3"
				set EXT ".bnd"
			elif TYPE == "BTX0"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".nsbtx" # NDS-specific
				endif
			elif TYPE == "CHNK"
				set EXT ".pak.xen" # Guitar Hero compressed audio file
			elif TYPE == "CPK "
				set EXT ".cpk" # CRI cpk archive
			elif TYPE == "CRUS"
				goto 0 MEMORY_FILE
				getDstring TYPE 8
				if TYPE == "CRUSHDM!"
					set EXT ".ds" # NDS-specific
				endif
			elif TYPE == "DCX"
				set EXT ".dcx"
			elif TYPE == "DDS "
				set EXT ".dds" # DDS model
			elif TYPE == "DDSx"
				set EXT ".ddsx" # Extended DDS model
			elif TYPE == "DIFF"
				set EXT ".diff" # NDS-specific
			elif TYPE == "DNBW"
				set EXT ".xwb" # Xact Wave Bank
			elif TYPE == "ea3"
				goto 0xa MEMORY_FILE
				getDstring IDENT 4 MEMORY_FILE
				if IDENT == "GEOB"
					set EXT ".aa3" # Atrac3+ audio file
				endif
			elif TYPE == "Exte"
				set EXT ".xm" # Extended Module (Tracker)
			elif TYPE == "EZ00"
				set EXT ".ez" # EZ-compressed file
			elif TYPE == "EZ10"
				set EXT ".ez" # EZ-compressed file
			elif TYPE == "FEVl"
				set EXT ".fev" # FEV file
			elif TYPE == "FEV1"
				set EXT ".fev"
			elif TYPE == "fknc"
				set EXT ".crf" # CRF 3D model
			elif TYPE == "FORM"
				goto 0x8 MEMORY_FILE
				getDstring CODE 4 MEMORY_FILE
				if CODE == "AIFF"
					set EXT ".aiff" # AIFF sound form
				endif
			elif TYPE == "FSB3"
				set EXT ".fsb" # FSB3 archive
			elif TYPE == "FSB4"
				set EXT ".fsb" # FSB4 archive
			elif TYPE == "FSB5"
				set EXT ".fsb" # FSB5 archive
			elif TYPE == "FSGX"
				set EXT ".xgs" # Xact GS descriptor
			elif TYPE == "FUNl"
				set EXT ".fun" # MIB: Alien Crisis FUN container
			elif TYPE == "GRP1"
				set EXT ".grp" # GRP archive
			elif TYPE == "HVQM"
				set EXT ".h4m" # H4M movie
			elif TYPE == "INDA"
				set EXT ".data" # data pack (Agricultural Simulator)
			elif TYPE == "Inno"
				set ZNAME "unins000.dat" # uninstall data file
			elif TYPE == "KBDS"
				set EXT ".xsb" # Xact Sound Bank
			elif TYPE == "mhwa"
				set EXT ".mh" # NDS-specific
			elif TYPE == "MIPh"
				set EXT ".mip"
			elif TYPE == "MODS"
				set EXT ".mods" # NDS mods movie
			elif TYPE == "MOIK"
				set EXT ".kev_bdl" # Worms: Reloaded bundle
			elif TYPE == "MSCF"
				set EXT ".cab" # CAB archive
			elif TYPE == "mshd"
				set EXT ".mshdf" # Xbox 360 mshd file
			elif TYPE == "MULA"
				set EXT ".mula" # MIB3 MULA archive
			elif TYPE == "MUSX"
				set EXT ".musx" # MUSX sound container
			elif TYPE == "NARC"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".narc" # NDS-specific
				endif
			elif TYPE == "NTRO"
				goto 4 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".nitro_archive" # NDS nitro archive
				endif
			elif TYPE == "OggS"
				goto 0x1c MEMORY_FILE
				get TEST string MEMORY_FILE
				if TEST == "fishead"
					set EXT ".ogm"
				else
					set EXT ".ogg" # ogg container
				endif
			elif TYPE == "PACK"
				set EXT ".pac" # NDS-specific
			elif TYPE == "PAL1"
				set EXT ".pal" # palette
			elif TYPE == "PIRS"
				set EXT ".pirs" # XBLA pirs archive
			elif TYPE == "PSIS"
				goto 0 MEMORY_FILE
				getDstring TEST 8 MEMORY_FILE
				if TEST == "PSISOIMG"
					set EXT ".psar" # Playstation emulation image (PSN)
				endif
			elif TYPE == "QRK."
				set EXT ".qrk" # NDS-specific
			elif TYPE == "RGCN"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".ncgr" # NDS-specific
				endif
			elif TYPE == "RIFF"
				callfunction getWaveType 1
			elif TYPE == "RIFX"
				endian big
				callfunction getWaveType 1
				endian little
			elif TYPE == "RLCN"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE 
					set EXT ".nclr" # NDS graphic
				endif
			elif TYPE == "RPF4"
				set EXT ".rpf" # RPF4 container
			elif TYPE == "RPGN"
				set EXT ".npgr" # NDS-specific
			elif TYPE == "RTFN"
				set EXT ".nftr" # NDS-specific
			elif TYPE == "sawh"
				goto 0x14 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				math SSIZE += 0x200
				if SSIZE == MSIZE
					set EXT ".hwas" # NDS IMA ADPCM audio
				endif
			elif TYPE == "SDAT"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".sdat" # Nintendo DS sdat sound archive
				endif
			elif TYPE == "SMPK"
				set EXT ".spk" # NDS sound pack
			elif TYPE == "SMV1"
				set EXT ".smv" # smv movie
			elif TYPE == "SWAV"
				goto 8 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				if SSIZE == MSIZE
					set EXT ".swav" # swav audio
				endif
			elif TYPE == "TEX1"
				set EXT ".tex" # texture
			elif TYPE == "TEX2"
				set EXT ".tex" # texture
			elif TYPE == "THP"
				set EXT ".thp" # THP multimedia file
			elif TYPE == "TNFS"
				set EXT ".fnt" # font
			elif TYPE == "TPF"
				set EXT ".tpf"
			elif TYPE == "VXDS"
				goto 0x28 MEMORY_FILE
				get SSIZE long MEMORY_FILE
				math SSIZE += 8
				if SSIZE == MSIZE
					set EXT ".vx" # Nintendo DS VX movie
				endif
			elif TYPE == "XEX2"
				set EXT ".xex" # Xbox 360 xex file
			elif TYPE == "XPR2"
				set EXT ".xpr"
			elif TYPE == "VRFS"
				goto 4 MEMORY_FILE
				getDstring TYPE 3 MEMORY_FILE
				if TYPE == "X360"
					set EXT ".vromfs.bin" # Xbox 360 rom file
				endif
			elif TYPE == "XMNP"
				set EXT ".manifest" # Xbox 360 $SystemUpdate manifest
			elif TYPE == "BDF3"
				set EXT ".bdt" # Dark Souls bdt archive
			elif TYPE == "BHF3"
				set EXT ".bhd"
			elif TYPE == "MVhd"
				set EXT ".vp6" # Electronic Arts VP6 video
			elif TYPE == "BGFA"
				set EXT ".ast" # Electronic Arts BGFA container
			elif TYPE == "GD.S"
				set EXT ".gd"
			elif TYPE == "LOCH"
				set EXT ".loc" # location file
			elif TYPE == "SEVT"
				set EXT ".sev"
			elif TYPE == "CPK0"
				set EXT ".cpk" # Capcom cpk file (unknown usage)
			elif TYPE == "AAAp"
				set EXT ".aaa" # stereo VAG audio file
			elif TYPE == "VAGp"
				set EXT ".vag" # mono Playstation ADPCM file
			elif TYPE == "BJBO"
				set EXT ".bjb"
			elif TYPE == "CFOM"
				set EXT ".cfo"
			elif TYPE == "RFOM"
				set EXT ".rfo"
			elif TYPE == "PLZP"
				set EXT ".plz"
			elif TYPE == "PIFF"
				set EXT ".pif"
			elif TYPE == "LANG"
				set EXT ".lang"
			elif TYPE == "PSND"
				set EXT ".psnd"
			elif TYPE == "VBSP"
				set EXT ".bsp" # Half-Life 2 map
			elif TYPE == "pmCx"
				set EXT ".xz_" # compressed Half-Life 2 archive
			elif TYPE == "DMAV"
				set EXT == "dmav"
			elif TYPE == "AUS "
				set EXT ".aus"
			elif TYPE == "WANM"
				set EXT ".wan"
			elif TYPE == "MSF0"
				set EXT ".msf"
			endif
			if EXT != ""
				set TQUIT 1
			endif
		elif STR == 3
			goto 0 MEMORY_FILE
			getDstring TYPE 3 MEMORY_FILE
			if TYPE == "SG2"
				set EXT ".sg2" # XBLA sg2 file
				goto 0x14 MEMORY_FILE
				get ZNAME string MEMORY_FILE
			elif TYPE == "RSF"
				set EXT ".rsf" # rsf file
			elif TYPE == "LOC"
				set EXT ".loc" # location file
			elif TYPE == "DCX"
				set EXT ".dcx"
			elif TYPE == "DRB"
				set EXT ".drb"
			elif TYPE == "TPF"
				set EXT ".tpf"
			elif TYPE == "TAE"
				set EXT ".tae"
			elif TYPE == "ID3"
				set EXT ".mp3"
			endif
			if MSIZE > 0x10
				goto 0xc MEMORY_FILE
				getDstring TYPE 4 MEMORY_FILE
				if TYPE == "NTRJ"
					set EXT ".srl" # NDS-specific
				endif
			endif
			if EXT != ""
				set TQUIT 1
			endif
		elif STR == 2
			goto 0 MEMORY_FILE
			getDstring TYPE 2 MEMORY_FILE
			if TYPE == "MZ"
				goto 0xd0 MEMORY_FILE
				get TEST string MEMORY_FILE
				if TEST == "PE"
					set EXT ".exe" # Executable Program
				elif TEST == "Rich"
					set EXT ".dll" # dynamic link library (dll)
				endif
			elif TYPE == "DB"
				set EXT ".db" # database file
			elif TYPE == "SD"
				set EXT ".sd"
			endif
			if EXT != ""
				set TQUIT 1
			endif
		elif STR == 0 # REMEMBER: set TQUIT to 1 if valid type is found!
			get TYPE long MEMORY_FILE
			if TYPE == 0x20000080
				set EXT ".adx" # CRI adx or ahx audio
				set TQUIT 1
			elif TYPE == 0x24000080
				set EXT ".adx" # CRI adx audio
				set TQUIT 1
			elif TYPE == 0x1c010080
				set EXT ".adx" # CRI adx audio file
				set TQUIT 1
			elif TYPE == 0x0d0d0d0d
				set EXT ".p256" # NDS 256p video
				set TQUIT 1
			elif TYPE == 0x401000
				goto 6 MEMORY_FILE
				getDstring TYPE 3
				if TYPE == "spx"
					set EXT ".spx" # NDS-specific
					set TQUIT 1
				endif
			elif TYPE == 0x474e5089
				set EXT ".png" # PNG picture
				set TQUIT 1
			elif TYPE == 0x75b22630
				set EXT ".wmv" # WMV video
				set TQUIT 1
			elif TYPE == 0x3032802
				set EXT ".ubipack" # Ubisoft sound pack
				set TQUIT 1
			elif TYPE == 0x80087322
				set EXT ".lds" # lds file (Worms: Reloaded)
				set TQUIT 1
			elif TYPE == 0xc000048
				set EXT ".sps" # EA sps audio file
				set TQUIT 1
			elif TYPE == 0x20000000
				goto 4 MEMORY_FILE
				getDstring TYPE 8 MEMORY_FILE
				if TYPE == "ftypM4A "
					set EXT ".m4a" # m4a audio file
					set TQUIT 1
				endif
			elif TYPE == 0xba010000
				set EXT ".mpg" # MPG video file
				set TQUIT 1
			elif TYPE == 0xba010000
				get TEST long MEMORY_FILE
				if TEST == 0x040044
					set EXT ".pss" # PSS movie (PS2)
					set TQUIT 1
				endif
			elif TYPE == 0xba010000
				set EXT ".pss"
				set TQUIT 1
			endif # type without string
			if TQUIT == 0
				goto 0 MEMORY_FILE
				get TYPE short MEMORY_FILE
				if TYPE == 0x7c1f
					set EXT ".tsb" # NDS-specific
					set TQUIT 1
				elif TYPE == 0xfbff
					set EXT ".mp3" # MPEG Layer3 audio file
					set TQUIT 1
				endif
			endif # TQUIT
			if TQUIT == 0
				goto 0 MEMORY_FILE
				get TYPE threebyte MEMORY_FILE
				if TYPE == 0x445242
					set EXT ".brd"
					set TQUIT 1
				endif
			endif # TQUIT
			if TQUIT == 0
				if MSIZE > 0x8
					goto 4 MEMORY_FILE
					getDstring TYPE 4 MEMORY_FILE
					if TYPE == "DAEH"
						set EXT ".ppp" # NDS ppp graphic
						set TQUIT 1
					endif
					if TQUIT == 0
						goto 5 MEMORY_FILE
						getDstring TYPE 3 MEMORY_FILE
						if TYPE == "TSF"
							set EXT ".tsf" # NDS tsf graphic
							set TQUIT 1
						endif
					endif
					if TQUIT == 0
						goto 4 MEMORY_FILE
						get TYPE threebyte MEMORY_FILE
						if TYPE == 0x041203
							set EXT ".adx" # CRI audio file
							set TQUIT 1
						endif
					endif
				endif
			endif
			if TQUIT == 0
				if MSIZE > 0xa
					goto 6 MEMORY_FILE
					getDstring TYPE 4 MEMORY_FILE
					if TYPE == "JFIF"
						set EXT ".jpg" # JPG picture
						set TQUIT 1
					elif TYPE == "Exif"
						set EXT ".jpg" # JPG picture
						set TQUIT 1
					endif
				endif
				if TQUIT == 0
					if MSIZE > 0x10
						goto 8 MEMORY_FILE
						getDstring TYPE 8 MEMORY_FILE
						if TYPE == "matroska"
							set EXT ".mkv" # MKV video
						endif
					endif
				endif
			endif # TQUIT
		endif # no string at start
	endif
	if TQUIT == 0
		if MSIZE >= 4
			goto 0 MEMORY_FILE
			get TYPE long MEMORY_FILE
			reverselong TYPE
			string TYPE p= ".%08x" TYPE
			set EXT TYPE
			set TYPESTRING "unknown (identifier: 0x%TYPE%)"
		else
			set TYPESTRING "unknown (file too small)"
		endif
	endif
endfunction
startfunction getWaveType
	goto 8 MEMORY_FILE
	getDstring TYPE 8 MEMORY_FILE
	if TYPE == "WAVEfmt "
		goto 0x14 MEMORY_FILE
		get CODEC short MEMORY_FILE
		if CODEC == 0x0165
			set EXT ".xma"
		elif CODEC == 0x0166
			set EXT ".xma"
		elif CODEC == 0x6501
			set EXT ".xma"
		elif CODEC == 0x6601
			set EXT ".xma"
		elif CODEC == 0x7002
			set EXT ".at3"
		elif CODEC == 0x161
			set EXT ".xWMA"
		elif CODEC == 0xffff
			set EXT ".Wwise"
		elif CODEC == 0x69
			set EXT ".lwav"
		elif CODEC == 0x11
			set EXT ".lwav"
		elif CODEC == 2
			set EXT ".lwav"
		elif CODEC == 1
			set EXT ".wav"
		elif CODEC == 0xfffe
			set EXT ".at3"
		else
			set EXT ".wav_unknown"
		endif
	elif TYPE == "AVI LIST"
		set EXT ".avi" # avi movie
	elif TYPE == "MVI_LIST"
		set EXT ".mvi" # mvi movie
	elif TYPE == "XWMAfmt "
		set EXT ".xwma" # Extended WMA
	else
		set EXT ".wav_unknown"
		set TYPESTRING "unknown wave format"
	endif
endfunction
