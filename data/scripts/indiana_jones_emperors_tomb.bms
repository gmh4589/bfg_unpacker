# IJET *.mtx (multi texture format)
# quickbms script by WRS, xentax.com

idstring "MULTITEX"
get SIX short
get TWO short
get ONE long
get ZERO long

get TEXCOUNT long
get TEXHEADSIZE long
get TWFOUR long      # head size
get TEXHEADSIZE long # 128

get FNAME basename

for t = 0 < TEXCOUNT
  get INDEX long
   getdstring UNKNOWN 16
   get UNKNOWN short     # 256/ flags?
   get UNKNOWN short
  getdstring TEXNAME1 32
  getdstring TEXNAME2 32 # not 64 because of repeated data
  get TWIDTH long
  get THEIGHT long
   get UNKNOWN long
  get BPP long
   get UNKNOWN long
  get MINIMAPS long
   get UNKNOWN long
   get UNKNOWN long
  get TEXPOS long
  get TEXTSIZE long

  # POS is a pointer to minimap info

  savepos POS
  goto TEXPOS

  # write 128-byte dds header
  log MEMORY_FILE 0 0
  putvarchr MEMORY_FILE 127 0

  # setup dds header

  putvarchr MEMORY_FILE 0 0x20534444 long  #dwMagic (DDS )
  putvarchr MEMORY_FILE 4 0x7C long        #dwSize (128)
  putvarchr MEMORY_FILE 8 0x21007 long     #dwFlags (prob. wrong)

  putvarchr MEMORY_FILE 12 THEIGHT long    #dwHeight
  putvarchr MEMORY_FILE 16 TWIDTH long     #dwWidth
  putvarchr MEMORY_FILE 28 MINIMAPS long   #dwMiniMapCount

  putvarchr MEMORY_FILE 76 32 long         #dwSize
  putvarchr MEMORY_FILE 80 4 long          #dwFlags
  putvarchr MEMORY_FILE 84 0x31545844 long #dwFourCC (DXT1)

  putvarchr MEMORY_FILE 108 4198408 long   #dwCaps1

  append
  for i = 0 < MINIMAPS
    get DATASIZE long  # minimap size
    savepos POS2
    log MEMORY_FILE POS2 DATASIZE  # save minimap
    math POS2 += DATASIZE
    goto POS2
  next i
  append

  get DSIZE asize MEMORY_FILE
  string FILENAME p= "%s/%s.dds" FNAME TEXNAME1
  log FILENAME 0 DSIZE MEMORY_FILE

  goto POS
next t