# game: Army Men: Sarge's War (Xbox)
# file type: *.sbr
# script type: extractor
# note: Xbox ADPCM headers get automatically added
#      (playable with vgmstream)
#
# script for QuickBMS http://quickbms.aluigi.org
# written by AlphaTwentyThree of Zenhax

get SIZE asize
if SIZE < 0x50
	cleanexit
endif

get BASE_HEADER_SIZE long
get HEADER_SIZE long
get DATA_START long
get DATA_SIZE long
get NUMB1 long
get NUMB2 long
get FILES long
get OFF_SECT2 long
get OFF_SECT1 long
get OFF_SECT3 long

get BNAME basename

# for i = 1 <= NUMB1 # sect 1
	# get CRC long
	# get IDENT long # if file is written
	# get IDX long
	# get ZERO long
	# get UNK1 long
	# getDstring ZERO 0xc
	# get UNK2 long
	# get UNK3 long
	# get UNK4 long
	# get UNK5 long
	# get UNK6 long
# next i

goto OFF_SECT2

for i = 1 <= FILES # sect2
	get OFFSET long
	math OFFSET += DATA_START
	get SIZE long
	get ZERO long
	get UNK long
	savepos MYOFF
	goto OFFSET
	get CODEC short
	get CH short
	get FREQ long
	math OFFSET += 0x14
	math SIZE -= 0x14
	string NAME p= "%s_sfx_%i.lwav" BNAME i
	callfunction XADP 1
	goto MYOFF
next i

 for i = 1 <= NUMB2 # sect3
	get OFFSET long
	math OFFSET += DATA_START
	get SIZE long
	get ZERO longlong
	get CODEC short
	get CH short
	get FREQ long
	get COEFF1 long
	get INTERLEAVE short
	get BITS short
	get COEFF2 long
	string NAME p= "%s_mus_%i.lwav" BNAME i
	callfunction XADP 1
 next i

startfunction XADP
	set MEMORY_FILE binary "\x52\x49\x46\x46\x18\x51\xa3\x0\x57\x41\x56\x45\x66\x6d\x74\x20\x14\x0\x0\x0\x69\x0\x2\x0\x44\xac\x0\x0\xcc\xc1\x0\x0\x48\x0\x4\x0\x2\x0\x40\x0\x64\x61\x74\x61\xf0\x50\xa3\x0"
	set RIFFSIZE SIZE
	math RIFFSIZE += 0x28
	putVarChr MEMORY_FILE 0x04 RIFFSIZE long
	putVarChr MEMORY_FILE 0x16 CH byte
	putVarChr MEMORY_FILE 0x18 FREQ long
	set VAR1 0x3073
	math VAR1 *= CH
	if FREQ == 48000
		math VAR1 *= 44100
	else
		math VAR1 *= FREQ
	endif
	math VAR1 /= 22050
	putVarChr MEMORY_FILE 0x1c VAR1 long	
	set VAR2 0x24
	math VAR2 *= CH
	putVarChr MEMORY_FILE 0x20 VAR2 short
	putVarChr MEMORY_FILE 0x2c SIZE long
	append
	log MEMORY_FILE OFFSET SIZE
	append
	get SIZE asize MEMORY_FILE
	log NAME 0 SIZE MEMORY_FILE
endfunction