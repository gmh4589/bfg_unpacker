# Beyond Good & Evil - *.bf/*.bf#/*.###

math xored = 0

get bf_size asize
get bf_name basename
get bf_ext extension # in case the format uses splitted archives(.bf0, .bf1, .bf2 and so on)
get bf_sign long
goto 0
if bf_sign == 0x00475542
	math xored = 1
	idstring "BUG\x00"
	filexor "\xb3\x98\xcc\x66"
elif bf_sign == 0x00474942
	idstring "BIG\x00"
endif
if bf_name == "Sally_PC_POLISH" # workaround for Beyond Good & Evil HD(PS3(PSN), XBOX360(XBLA))
	set bf_sign long 0x00475542
	math xored = 0
endif
get bf_ver long
get files1 long
get folders1 long
get bf_04 long
get bf_05 long
get bf_06 long
get bf_07 long
get bf_08 long
get bf_09 long
if bf_ver >= 0x22 || bf_ver <= 0x26
	get bf_10 long
	get files2 long
	get folders2 long
	get info_off1 long
	get bf_14 long
	get bf_15 long
	get bf_16 long
	if bf_sign == 0x00474942
		math bf_general_info_size = 0x54
	elif bf_sign == 0x00475542
		math bf_general_info_size = 0x58
	endif
else
	print " BF archive version - %bf_ver|x% \n this script doesn't work with this archive, contact me."
	break
endif

xmath info_v1 "info_off1 + (bf_08 * 8)"
xmath info_v2 "info_v1 + (bf_08 * bf_general_info_size)"

for i1 = 0 < files1
	get offset long
	get hash long
	
	putarray 1 i1 offset
	putarray 2 i1 hash
next i1

goto info_v2
for i2 = 0 < folders1
	get a01 long
	get a02 long
	get a03 long
	get a04 long
	get a05 long
	getdstring a06 0x40
	
	putarray 11 i2 a01
	putarray 12 i2 a02
	putarray 13 i2 a03
	putarray 14 i2 a04
	putarray 15 i2 a05
	putarray 16 i2 a06
next i2

goto info_v1
for i3 = 0 < files1
	get b01 long
	get b02 long
	get b03 long
	get b04 long
	get b05 time
	getdstring b06 0x40
	if bf_sign == 0x00475542
		get b07 long
		putarray 27 i3 b07
	endif
	
	putarray 21 i3 b01
	putarray 22 i3 b02
	putarray 23 i3 b03
	putarray 24 i3 b04
	putarray 25 i3 b05
	putarray 26 i3 b06
next i3

for x = 0 < files1
	getarray offset 1 x
	getarray hash 2 x
	getarray size 21 x
	getarray prevfile 22 x
	getarray nextfile 23 x
	getarray entrydir 24 x
	getarray timestamp 25 x
	getarray name 26 x
	
	if bf_sign == 0x00475542
		getarray untouched 27 x
	endif
	
	do
		getarray firstfile 11 entrydir
		getarray subdir 12 entrydir
		getarray nextdir 13 entrydir
		getarray prevdir 14 entrydir
		getarray parentdir 15 entrydir
		getarray path 16 entrydir
		string name p "%s/%s" path name
		math entrydir = parentdir
	while parentdir != 0xffffffff
	
	set finalname string name
	callfunction extract
next x

startfunction extract
	if bf_ext == "bf0"
		if offset >= 0x20000000
			math bf_bf0_size = 0x10000000
		else
			math bf_bf0_size = 0x20000000
		endif
		
		if offset >= 0x30000000
			xmath bf_num1 "(offset / 0x10000000) - 1"
		else
			xmath bf_num1 "(offset / 0x20000000)"
		endif
		xmath split_offset1 "(offset % bf_bf0_size) + 4"
		xmath split_offset2 "split_offset1 + size"
		xmath split_chunks "(split_offset2 / bf_bf0_size) + 1"
		
		string bf_load p "%s.bf%01d" bf_name bf_num1
		open fdse bf_load 1

		if split_chunks >= 2
			if xored = 1
				filexor ""
			endif
			
			xmath last_chunk "split_chunks - 1"
			
			append
			for x = 0 < split_chunks
				if x = 0
					xmath split_size1 "bf_bf0_size - split_offset1"
					log finalname split_offset1 split_size1 1
				else
					math temp1_bf_num = bf_num1
					math temp1_bf_num + 1
					if bf_num1 >= 2
						xmath temp2_bf_num "temp1_bf_num % bf_num1"
					else
						xmath temp2_bf_num "(temp1_bf_num % bf_num1) + 1"
					endif
					xmath temp_bf_size "(temp2_bf_num) * bf_bf0_size"
					string bf_temp_load p "%s.bf%01d" bf_name temp1_bf_num
					open fdse bf_temp_load 2
					set split_offset1 long 0
					if x = last_chunk
						xmath split_size1 "split_offset2 - temp_bf_size"
					else
						xmath split_size1 "bf_bf0_size % split_offset2"
					endif
					log finalname split_offset1 split_size1 2
				endif
			next x
			append
			
			if xored = 1
				filexor "\xb3\x98\xcc\x66"
			endif
		endif
		
		if xored = 0
			if split_chunks <= 1
				log finalname split_offset1 size 1
			endif
		elif xored = 1
			if split_chunks <= 1
				filexor ""
				log finalname split_offset1 size 1
				filexor "\xb3\x98\xcc\x66"
			endif
		endif
	elif bf_ext == "001"
		math bf_001_size == 0x2bc00000
		xmath bf_num2 "(offset / bf_001_size) + 1"
		xmath split_offset1 "(offset % bf_001_size) + 4"
		xmath split_offset2 "split_offset1 + size"
		xmath split_chunks "(split_offset2 / bf_001_size) + 1"
		
		string bf_load p "%s.%03d" bf_name bf_num2
		open fdse bf_load 1

		if split_chunks >= 2
			if xored = 1
				filexor ""
			endif
			
			xmath last_chunk "split_chunks - 1"
			
			append
			for x = 0 < split_chunks
				if x = 0
					xmath split_size1 "bf_001_size - split_offset1"
					log finalname split_offset1 split_size1 1
				else
					math temp_bf_num = bf_num2
					math temp_bf_num + 1
					xmath temp_bf_size "((temp_bf_num % bf_num2) + 1) * bf_001_size"
					string bf_temp_load p "%s.%03d" bf_name temp_bf_num
					open fdse bf_temp_load 2
					set split_offset1 long 0
					if x = last_chunk
						xmath split_size1 "split_offset2 - temp_bf_size"
					else
						xmath split_size1 "bf_001_size % split_offset2"
					endif
					log finalname split_offset1 split_size1 2
				endif
			next x
			append
			
			if xored = 1
				filexor "\xb3\x98\xcc\x66"
			endif
		endif
		
		if xored = 0
			if split_chunks <= 1
				log finalname split_offset1 size 1
			endif
		elif xored = 1
			if split_chunks <= 1
				filexor ""
				log finalname split_offset1 size 1
				filexor "\xb3\x98\xcc\x66"
			endif
		endif
	else
		math offset + 4
		if xored = 0
			log finalname offset size
		elif xored = 1
			filexor ""
			log finalname offset size
			filexor "\xb3\x98\xcc\x66"
		endif
	endif
endfunction
