# Secret Bunker USSR .DAT
#   the script uses a scanner for finding the two index tables
#   additionally there is no way to know if a file is compressed or not
#   it may not work with some files

get DAT_SIZE asize
math IDX = 0
goto -8 # the last 8 bytes are probably the two offsets (obfuscated)
for
    findloc OFFSET binary "\x01" 0 "" 0
    callfunction GET_ZIP 1
    savepos TMP
    xmath TMP "DAT_SIZE - TMP"
    if ZSIZE < 0
    elif SIZE < 0
    #elif SIZE u< ZSIZE # correct because some small entries are larger when compressed
    elif ZSIZE > TMP
    else
        print "found OFFSET %OFFSET|X%"
        savepos TMP
        if IDX == 0
            clog MEMORY_FILE2 TMP ZSIZE SIZE
        elif IDX == 1
            clog MEMORY_FILE TMP ZSIZE SIZE
        else
            break
        endif
        math IDX + 1
    endif
    goto OFFSET
    goto -1 0 SEEK_CUR
next

get ELEMENTS long MEMORY_FILE2
get FOLDERS long MEMORY_FILE2
for i = 0 < FOLDERS
    get NAMESZ short MEMORY_FILE2
    getdstring NAME NAMESZ MEMORY_FILE2
    putarray 0 i NAME
next i

for ELEMENT = 0 < ELEMENTS
    get FILES long MEMORY_FILE
    for i = 0 < FILES
        get TYPE short MEMORY_FILE
        get FOLDER_IDX short MEMORY_FILE
        callfunction GET_NAME 1
        get OFFSET long MEMORY_FILE
        get XSIZE long MEMORY_FILE
        get ZERO long MEMORY_FILE
        get DUMMY long MEMORY_FILE  # 0, 1 or 2 (not related to ZIP)
        get TSTAMP longlong MEMORY_FILE

        getarray PATH 0 FOLDER_IDX
        string NAME p "%s/%s." PATH NAME

        # there is no way to know if a file is compressed or not
        # TYPE, ZERO and DUMMY are all the same as the compressed ones
        callfunction GET_ZIP 1
        if ZIP == 1
            savepos OFFSET
            clog NAME OFFSET ZSIZE SIZE
        else
            log NAME OFFSET XSIZE
        endif
    next i
    callfunction GET_NAME 1
    callfunction GET_NAME 1
    callfunction GET_NAME 1
    callfunction GET_NAME 1
next ELEMENT

startfunction GET_NAME
    get NAMESZ short MEMORY_FILE
    getdstring NAME NAMESZ MEMORY_FILE
endfunction

startfunction GET_ZIP
    goto OFFSET
    get ZIP byte
    get ZSIZE long
    get SIZE long
endfunction
