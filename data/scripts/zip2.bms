# ZIP files (alternative way) 0.1.2
#   get end of directory and parses central directory
# script for QuickBMS http://quickbms.aluigi.org

math IGNORE_MAGICS = 0

get TEST1 long
goto -0x16
get TEST2 long
goto -0x16
if TEST1 != 0x04034b50
    math IGNORE_MAGICS = 1
endif
if TEST2 != 0x06054b50
    math IGNORE_MAGICS = 1
endif
if IGNORE_MAGICS == 0
idstring "PK\x05\x06"
else
get SKIP long
endif
        get disk_num        short
        get disk_start      short
        get central_entries short
        get central_entries short
        get central_size    long
        get central_offset  long
        get comm_len        short
        getdstring comment  comm_len

for i = 0 < central_entries
    goto central_offset
    if IGNORE_MAGICS == 0
    idstring "PK\x01\x02"
    else
    get SKIP long
    endif
        get ver_made        short
        get ver_need        short
        get flag            short
        get method          short
        get modtime         short
        get moddate         short
        get crc             long
        get comp_size       long
        get uncomp_size     long
        get name_len        short
        get extra_len       short
        get comm_len        short
        get disknum         short
        get int_attr        short
        get ext_attr        long
        get rel_offset      long
        getdstring name     name_len
        getdstring extra    extra_len
        getdstring comment  comm_len
    savepos central_offset

    math bck_comp_size   = comp_size
    math bck_uncomp_size = uncomp_size

    goto rel_offset
    if IGNORE_MAGICS == 0
    idstring "PK\x03\x04"
    else
    get SKIP long
    endif
        get ver             short
        get flag            short
        get method          short
        get modtime         short
        get moddate         short
        get crc             long
        get comp_size       long
        get uncomp_size     long
        get name_len        short
        get extra_len       short
        getdstring name     name_len
        getdstring extra    extra_len
        savepos offset

        if uncomp_size == 0xffffffff
            math comp_size   = bck_comp_size
            math uncomp_size = bck_uncomp_size
        endif

        if method == 0
            Log name offset uncomp_size
        else
            if method == 8
                ComType deflate
            elif method == 1
                ComType unshrink
            elif method == 6
                ComType explode
            elif method == 9
                ComType deflate64
            elif method == 12
                ComType bzip2
            elif method == 14
                ComType lzmaefs
            elif method == 13
                ComType XMemDecompress
            elif method == 21
                ComType XMemDecompress
            elif method == 64
                ComType darksector
            elif method == 98
                ComType ppmd
            elif method == 99
                print "this script doesn't support AES encryption"
                cleanexit
            else
                print "unsupported compression method %method%"
                cleanexit
            endif
            CLog name offset comp_size uncomp_size
        endif
next i

